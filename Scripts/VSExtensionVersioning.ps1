<#
.Description
This script writes the provided version number into all vsixmanifest files, which are stored in the SourcesDirectory.
.Parameter SourcesDirectory
Directory, which contains the vsixmanifest file. 
.Parameter BuildLabel
BuildNumber generated by TFS Team Build, which should be written partially to the vsixmanifest file.
#>

param (
    [Parameter(mandatory=$true, helpmessage="Sources Directory is required.")]
    [ValidateNotNullOrEmpty()]
    [String] $SourcesDirectory,
    [Parameter(mandatory=$true, helpmessage="BuildLabel is required.")]
    [ValidateNotNullOrEmpty()]
    [String] $BuildNumber
)

function DetermineVersion()
{
    #Determine full version string; get last element after underline
    $version = $BuildNumber.Split("_")
    $version = $version[-1]

    #Remove year from third position
    $date = $version.Split(".")
    $date[2] = $date[2].Substring(4, 4)

    #Merge new version string with reduced date
    $version = $date -join '.'

    return $version
}

function WriteToVsixManifest()
{
    $files = (Get-ChildItem -Path $SourcesDirectory -Include 'source.extension.vsixmanifest' -Recurse)

    foreach ($file in $files)
    {
      [Xml] $xmlContent = [Xml] (Get-Content -Path $file)

      [System.Xml.XmlElement] $root = $xmlContent.get_DocumentElement()

      foreach ($node in $root.Metadata)
      {
        $node.Identity.Version = $version

        Set-ItemProperty $file.FullName -Name IsReadOnly -Value $false

        $xmlContent.Save($file);

        Write-Host "Version number" $version "has been successfully written to file" $file

        break
      }
    }
}

$version = DetermineVersion

WriteToVsixManifest

Exit 0